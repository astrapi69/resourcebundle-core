<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>resourcebundle.inspector</groupId>
	<artifactId>resourcebundle.inspector.core</artifactId>
	<version>1.0.1</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<nv-i18n.version>1.11</nv-i18n.version>
		<!-- JAULP versions -->
		<jaulp.core.version>3.9.0</jaulp.core.version>
		<jaulp.collections.version>${jaulp.core.version}</jaulp.collections.version>
		<jaulp.design.patterns.version>${jaulp.core.version}</jaulp.design.patterns.version>
		<jaulp.email.version>${jaulp.core.version}</jaulp.email.version>
		<jaulp.file.version>${jaulp.core.version}</jaulp.file.version>
		<jaulp.generic.tree.version>${jaulp.core.version}</jaulp.generic.tree.version>
		<jaulp.lang.version>${jaulp.core.version}</jaulp.lang.version>
		<jaulp.net.version>${jaulp.core.version}</jaulp.net.version>
		<jaulp.random.version>${jaulp.core.version}</jaulp.random.version>
		<jaulp.security.version>${jaulp.core.version}</jaulp.security.version>
		<jaulp.swing.version>${jaulp.core.version}</jaulp.swing.version>
		<jaulp.test.objects.version>${jaulp.core.version}</jaulp.test.objects.version>
		<jaulp.time.version>${jaulp.core.version}</jaulp.time.version>
		<jaulp.xml.version>${jaulp.core.version}</jaulp.xml.version>
		<mystic.crypt.version>${jaulp.core.version}</mystic.crypt.version>
		<commons-io.version>2.4</commons-io.version>
		<!-- MAVEN PLUGIN versions -->
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<maven-compiler-plugin.source.version>1.7</maven-compiler-plugin.source.version>
		<maven-compiler-plugin.target.version>1.7</maven-compiler-plugin.target.version>
		<maven-compiler-plugin.compilerVersion>1.7</maven-compiler-plugin.compilerVersion>
		<maven-compiler-plugin.encoding>UTF-8</maven-compiler-plugin.encoding>
		<maven-compiler-plugin.optimize>true</maven-compiler-plugin.optimize>
		<maven-compiler-plugin.showWarnings>true</maven-compiler-plugin.showWarnings>
		<maven-compiler-plugin.debug>true</maven-compiler-plugin.debug>
		<maven-source-plugin.version>2.2.1</maven-source-plugin.version>
		<maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
		<maven-surefire-plugin.version>2.15</maven-surefire-plugin.version>
		<license-maven-plugin.version>2.5</license-maven-plugin.version>
		<maven-gpg-plugin.version>1.4</maven-gpg-plugin.version>
		<slf4j.version>1.6.4</slf4j.version>
		<log4j.version>1.2.16</log4j.version>
		<testng.version>6.8.7</testng.version>
		<github.global.server>github</github.global.server>
	</properties>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
			</dependency>

			<dependency>
				<groupId>com.neovisionaries</groupId>
				<artifactId>nv-i18n</artifactId>
				<version>${nv-i18n.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.lang</artifactId>
				<version>${jaulp.lang.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.file</artifactId>
				<version>${jaulp.file.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

		</dependencies>

	</dependencyManagement>



	<dependencies>
		<!-- UNIT TESTS DEPENDENCIES -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.alpharogroup</groupId>
			<artifactId>jaulp.lang</artifactId>
		</dependency>

		<dependency>
			<groupId>de.alpharogroup</groupId>
			<artifactId>jaulp.file</artifactId>
		</dependency>

		<dependency>
			<groupId>com.neovisionaries</groupId>
			<artifactId>nv-i18n</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

	</dependencies>

	<build>

		<resources>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/site</directory>
			</resource>

		</resources>

		<testResources>

			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>


		<pluginManagement>

			<plugins>

				<plugin>
					<inherited>true</inherited>
					<!-- NOTE: We don't need a groupId specification because the group is 
						org.apache.maven.plugins ...which is assumed by default. -->
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven-compiler-plugin.source.version}</source>
						<target>${maven-compiler-plugin.target.version}</target>
						<compilerVersion>${maven-compiler-plugin.compilerVersion}</compilerVersion>
						<encoding>${maven-compiler-plugin.encoding}</encoding>
						<optimize>${maven-compiler-plugin.optimize}</optimize>
						<showWarnings>${maven-compiler-plugin.showWarnings}</showWarnings>
						<debug>${maven-compiler-plugin.debug}</debug>
					</configuration>
				</plugin>
				<!-- Configuring Maven Source Plugin: To attach source artifacts to your 
					build we execute the source:jar goal from the source plugin during the package 
					phase. -->
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Configuring Maven Javadoc Plugin: To attach javadoc artifacts to 
					your build we execute the javadoc:jar goal from the javadoc plugin. -->
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<!-- this is used for inheritance merges -->
							<phase>package</phase>
							<!-- append to the packaging phase. -->
							<goals>
								<goal>attached</goal>
								<!-- goals == mojos -->
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<additionalBuildcommands>
							<buildcommand>org.eclipse.m2e.core.maven2Builder</buildcommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
							<projectnature>org.springsource.ide.eclipse.gradle.core.nature</projectnature>
						</additionalProjectnatures>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>
				<!-- Signing with gpg -->
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${site-maven-plugin.version}</version>
					<configuration>
						<message>Maven artifacts for ${project.version}</message>
						<!-- git commit message -->
						<noJekyll>true</noJekyll>
						<!-- disable webpage processing -->
						<merge>true</merge>
						<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
						<!-- matches distribution management repository url above -->
						<branch>refs/heads/mvn-repo</branch>
						<!-- remote branch name -->
						<includes>
							<include>**/*</include>
						</includes>
						<repositoryName>${project.artifactId}</repositoryName>
						<!-- github repo name -->
						<repositoryOwner>astrapi69</repositoryOwner>
						<!-- github username -->
					</configuration>
					<executions>
						<!-- run site-maven-plugin's 'site' target as part of the build's normal 
							'deploy' phase -->
						<execution>
							<goals>
								<goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>

					<dependencies>
						<dependency>
							<groupId>org.eclipse.mylyn.github</groupId>
							<artifactId>org.eclipse.egit.github.core</artifactId>
							<version>${org.eclipse.egit.github.core.version}</version>
						</dependency>
					</dependencies>

				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

		</plugins>

	</build>
</project>